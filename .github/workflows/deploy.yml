# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{env.working-directory}}

      - name: Test with Gradle
        run: ./gradlew test
        working-directory: ${{env.working-directory}}

      - name: Build with Gradle
        run: ./gradlew bootJar
        working-directory: ${{env.working-directory}}

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: gkstjr5731/sidedish
          registry: docker.io
          dockerfile: ${{env.working-directory}}/Dockerfile
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy ðŸ˜†
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_BASTION_IP }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            ssh -i ${{ secrets.PRIVATE_KEY }} ec2-user@${{ secrets.EC2_WAS_IP }}
            curl -w '\n' http://169.254.169.254/latest/meta-data/local-ipv4
            docker pull gkstjr5731/sidedish:be-deploy-${GITHUB_SHA::7}
            docker tag gkstjr5731/sidedish:be-deploy-${GITHUB_SHA::7} sidedish:be-deploy-${GITHUB_SHA::7}
            docker stop server
            docker run -d --rm --name server -p 8080:8080 sidedish:be-deploy-${GITHUB_SHA::7}
