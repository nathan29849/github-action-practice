# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [test2]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{env.working-directory}}

      - name: Build with Gradle
        run: ./gradlew bootJar
        working-directory: ${{env.working-directory}}

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: gkstjr5731/airbnb
          registry: docker.io
          tags: v1, latest
          dockerfile: ${{env.working-directory}}/Dockerfile
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy ðŸ˜† - multiple host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_WAS_IP }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          proxy_host: ${{ secrets.EC2_BASTION_IP }}
          proxy_username: ec2-user
          proxy_key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker pull gkstjr5731/airbnb:latest
            docker tag gkstjr5731/airbnb:latest airbnb:latest
            docker stop server
            docker run -d -e profile=$profile -e MYSQL_USERNAME=${{secrets.MYSQL_USERNAME}} -e MYSQL_DATABASE_URL=${{secrets.MYSQL_DATABASE_URL}} -e MYSQL_DATABASE_PASSWORD=${{secrets.MYSQL_DATABASE_PASSWORD}} --name server -p 8080:8080 airbnb:latest
